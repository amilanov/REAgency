c
@username.username
c
@username
c
params
c
params
c
@real_estates.first.user.username
@real_estates
@display_user
c
@real_estates.first.user.username
@real_estates.first.user
@real_estates.first
c
params
c
params
c
city_id
c
real_estates_from_params
c
RealEstate.all.size
@real_estates.size
RealEstate.all
@real_estates
n
params
 @real_estates
n
c
city_id.empty?
c
params
c
params
c
params
c
condition
n
c
@real_estates
n
params
n
c
@real_estates.reject(a)
@real_estates.delete(a)
a
a.class
a = @real_estates.first
@real_estates.delete()
@real_estates
@real_estates.reject!{|re| re["city_id"] == city_id.to_i}
@real_estates
@real_estates.reject{|re| re["city_id"] == city_id.to_i}
c
@real_estates.reject{|re| re["city_id"] == city_id.to_i}
 @real_estates
@real_estates.reject!{|re| re["city_id"] == city_id.to_i}
c
@real_estates.methods - Object.methods
require 'looksee'
@real_estates
@real_estates.delete(@real_estates.first)
@real_estates
c
@real_estates
c
@real_estates.class
@real_estates.clas
@real_estates
n
c
@real_estates.select{|re| re["city_id"] == city_id.to_i}
c
@real_estates.first['city_id'] == city_id.to_i
@real_estates.first['city_id'] == city_id
city_id
@real_estates.first['city_id']
@real_estates.first
@real_estates
c
city_id
 @real_estates
c
@real_estates.size
c
@real_estates.size
@real_estates
c
real_estates_from_params["city_id"]
c
params
c
@real_estates
c
n
 @real_estates.first['city_id']
 @real_estates
n
c
n
c
RealEstate.eager_load(:real_estate_type, :city).where(real_estate_types: {realEstateType: 'Stan'})
 params["real_estates"]
params
n
c
params
c
params["apartments"]["city_id"]
params["apartments"]
params
c
params
c
params
c
@selected_re_type
c
@selected_re_type
n
c
@selected_re_type
c
@selected_re_type.id
c
@re_types.find{ |re| re[:realEstateType] == selected_type }
@re_types
selected_type
n
c
RealEstateType.all
params
c
SavedRealEstate.saved?(current_user, real_estate.id)
c
SavedRealEstate.saved?(current_user, real_estate.id)
c
current_user
SavedRealEstate.saved?(real_estate.id)
c
@saved_real_estates.uniq
@saved_real_estates
c
back_to_param
c
params[:back_to]
c
back_to_param
c
params[:back_to]
c
params
c
params
c
RealEstate.where(id: real_estate_id).first.realEstateName
RealEstate.find(id: real_estate_id).first
RealEstate.find(id: real_estate_id)
RealEstate.select(id: real_estate_id)
RealEstate.select(id: real_estate_id).realEstateName
RealEstate.where(id: real_estate_id).realEstateName
RealEstate.where(id: real_estate_id)
real_estate_id
c
current_user.real_estates.first.saved_real_estate
current_user.real_estates.first
current_user.real_estates
current_user.saved_real_estates.first.real_estates
current_user.saved_real_estates.first.real_estate
current_user.saved_real_estates.first
current_user.saved_real_estates
c
where("realEstateName LIKE ?", "%#{search}%")
c
find(:all, :conditions => ["contractName LIKE ?", "%#{search}%"])
find(:all, :conditions => ["name LIKE ?", "%#{search}%"])
find(:all, :conditions => ["created_at LIKE ?", "%#{search}%"])
find(:all, :conditions => ["realEstateName LIKE ?", "%#{search}%"])
find(:all, :conditions => ["self.realEstateName LIKE ?", "%#{search}%"])
find(:all, :conditions => ["realEstateName LIKE ?", "%#{search}%"])
find(:all, :conditions => ["real_estate.realEstateName LIKE ?", "%#{search}%"])
find(:all, :conditions => ["real_estates.realEstateName LIKE ?", "%#{search}%"])
n
s
c
find(:all, :conditions => ["realEstateName LIKE ?", "%#{search}%"])
n
s
c
find(:all, :conditions => ['realEstateName LIKE ?', "%#{search}%"])
n
s
c
find(:all, :conditions => ['realEstateName LIKE ?', "%#{search}%"])
find(:all, :conditions => ['real_estate_name LIKE ?', "%#{search}%"])
n
s
c
@real_estates1
c
 RealEstate.includes(:real_estate_detail)
 RealEstate.includes(:real_estate_details)
@real_estates
 @real_estates
c
@months
c
@months
c
@months
c
 @months
c
@months
(@months[month]||=[]) << re
@months[month]||=[]
@months
(@months[month]||[]) << re
@months
@months[month]||[]
month
re
(@months[month]||[])
@months[month]
n
b 91
re.created_at.strftime("%B")
re
c
@months
@real_estates.first.created_at.strftime("%B")
@real_estates.first.created_at
@real_estates.first
@months
@real_estates
c
exception
n
c
exception
n
c
params[:documents]
c
 @documents
c
User.includes(:roles).where(roles: {roleName: 'admin'})
@for_users
@for_users = User.includes(:roles).where(roles: {roleName: 'user'})
